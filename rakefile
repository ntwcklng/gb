require 'rake'
require 'yaml'
class String
def black;          "\033[30m#{self}\033[0m" end
def red;            "\033[31m#{self}\033[0m" end
def green;          "\033[32m#{self}\033[0m" end
def brown;          "\033[33m#{self}\033[0m" end
def blue;           "\033[34m#{self}\033[0m" end
def magenta;        "\033[35m#{self}\033[0m" end
def cyan;           "\033[36m#{self}\033[0m" end
def gray;           "\033[37m#{self}\033[0m" end
def bg_black;       "\033[40m#{self}\033[0m" end
def bg_red;         "\033[41m#{self}\033[0m" end
def bg_green;       "\033[42m#{self}\033[0m" end
def bg_brown;       "\033[43m#{self}\033[0m" end
def bg_blue;        "\033[44m#{self}\033[0m" end
def bg_magenta;     "\033[45m#{self}\033[0m" end
def bg_cyan;        "\033[46m#{self}\033[0m" end
def bg_gray;        "\033[47m#{self}\033[0m" end
def bold;           "\033[1m#{self}\033[22m" end
def reverse_color;  "\033[7m#{self}\033[27m" end
end
SOURCE = "."
CONFIG = {
  'posts' => File.join(SOURCE, "_posts"),
  'post_ext' => "md",
  
}

task :js do
	puts "Running JS Task".magenta
	files = FileList["js/_*.js"]
	concat_file = "js/global.js"

	open(concat_file, "w") do |output|
		output.puts("document.addEventListener('DOMContentLoaded', function() {")
		files.each do |input|
			output.puts(File.read("#{input}"))
			output.puts("\n")
		end
		output.puts("});")
	end
	`touch dist/global.js`
	`uglifyjs js/global.js -o dist/global.js`
	puts "UglifyJS DONE".green
end
task :css_scss do
	puts "Running SCSS Task".magenta
	`sass --style=compressed --sourcemap=none _sass/inline_layout.scss dist/inline_layoutt.css`
	`autoprefixer dist/inline_layout.css -o _includes/inline_layout.css`
	puts "SCSS & Autoprefixer DONE".green
end
task :jekyll_dev do
	puts "Building Jekyll".magenta
	`jekyll build --config _config-dev.yml`
	puts "Jekyll DONE. Running Server".green
	`jekyll serve --skip-initial-build`
end

task :dev => [:css_scss, :js, :jekyll_dev] do
	puts "Done with all Tasks".green
end
task :live => [:css_scss, :js] do
	puts "Ready to deploy!".green
end

task :newpost do 
	puts 'Begin to create a new Post'
	puts 'But first, let me ask you a few questions'

	puts '-------'
	puts 'Title?'
	title = $stdin.gets.chomp

	puts '-------'
	puts 'Author?'
	author = $stdin.gets.chomp

	puts '-------'
	puts 'Category?'
	cat = $stdin.gets.chomp

	puts '-------'
	puts 'Subtitle?'
	subtitle = $stdin.gets.chomp

	#title = ENV['title'] ||Â ENV['titel']

	slug = title.downcase.strip.gsub(' ', '-').gsub(/[^\w-]/, '')
	filename = File.join(
		CONFIG['posts'],
		"#{Time.now.strftime('%Y-%m-%d')}-#{slug}.#{CONFIG['post_ext']}"
	)

	if File.exist?(filename)
		abort("aborted!") if ask('#{filename} already exist. Do you want to override it?', ['y', 'n']) == 'n'
	end

	puts "Creating new File: #{filename}"
	open(filename, 'w') do |post|
		post.puts '---'
		post.puts "layout: post"
		post.puts "title: \"#{title.gsub(/-/,' ')}\""
		post.puts "author: \"#{author}\""
		post.puts "wps_subtitle: #{subtitle}"
		post.puts "categories: #{cat}"
		post.puts "head__img--fullurl: //glossboss.de/images/"
		post.puts "markasnew: true"
		post.puts '---'
	end
	
end
